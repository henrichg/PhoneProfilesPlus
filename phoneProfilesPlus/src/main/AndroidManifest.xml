<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:installLocation="internalOnly">

    <!-- android:installLocation="internalOnly" is needed for working BOOT_COMPLETED broadcast -->

    <supports-screens
        android:anyDensity="true"
        android:largeScreens="true"
        android:normalScreens="true"
        android:smallScreens="true"
        android:xlargeScreens="true"/>

    <uses-permission android:name="com.android.launcher.permission.INSTALL_SHORTCUT" />
    <uses-permission android:name="android.permission.MODIFY_AUDIO_SETTINGS"/>
    <uses-permission android:name="android.permission.WRITE_SETTINGS" tools:ignore="ProtectedPermissions"/>
    <uses-permission android:name="android.permission.WRITE_SECURE_SETTINGS" tools:ignore="ProtectedPermissions"/>
    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>
    <uses-permission android:name="android.permission.SET_WALLPAPER"/>
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE"/>
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION"
        tools:ignore="BackgroundLocationPolicy" />
    <uses-permission android:name="android.permission.ACCESS_SUPERUSER"/>
    <uses-permission android:name="android.permission.READ_SYNC_SETTINGS"/>
    <uses-permission android:name="android.permission.WRITE_SYNC_SETTINGS"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
    <uses-permission android:name="android.permission.MODIFY_PHONE_STATE" tools:ignore="ProtectedPermissions"/>
    <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
    <uses-permission android:name="android.permission.READ_CONTACTS"/>
    <uses-permission android:name="android.permission.READ_CALENDAR"/>
    <uses-permission android:name="android.permission.DISABLE_KEYGUARD"/>
    <uses-permission android:name="android.permission.ACCESS_NOTIFICATION_POLICY"/>
    <uses-permission android:name="android.permission.NFC"/>

<!--    Must be granted because of: -->
<!--    https://developer.android.com/guide/components/activities/background-starts    -->
<!--    DrawOverAppsPermissionNotification.showNotification() is for granting it.-->
<!--    better: usage of android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION is for granting it.-->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW"/>

    <!-- <uses-permission android:name="android.permission.USE_SIP"/> -->
    <uses-permission android:name="android.permission.VIBRATE"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS" />
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-permission android:name="android.permission.TETHER_PRIVILEGED" tools:ignore="ProtectedPermissions" />

<!--    <uses-permission android:name="android.permission.BLUETOOTH_CONNECT" />-->
<!--    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" />-->
<!--    <uses-permission android:name="android.permission.BROADCAST_CLOSE_SYSTEM_DIALOGS" />-->
<!--    <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>-->

    <!-- This is required for service RecognitionServiceTrampoline, when user needs to -->
    <!-- configure PPP as default assistant, for airplane mode switching without root.-->
    <!-- This service is required by Googe (e-mail from Google):
         "We recently uncovered a highly visible user-facing issue where your app (sk.henrichg.phoneprofilesplus)
         causes the Android RecognitionService to break, which is potentially affecting all of your users on
         Android 11 or earlier.
         Specifically, when a user on Android 11 or earlier sets your assistant application as the default
         assistant for the phone, it is expected to provide RecognitionService (speech to text) functionality
         to other applications on the same device as well. However, if another app requests the RecognitionService
         functionality and does not receive it from your assistant app, the requesting app will immediately crash.
         The Android RecognitionService functionality is a widely used service. To fix the issue as soon as
         possible, please review the below recommendation." -->
<!--    <uses-permission android:name="android.permission.RECORD_AUDIO" android:maxSdkVersion="30" />-->
    <uses-permission android:name="android.permission.RECORD_AUDIO" />
    <uses-permission android:name="android.permission.SEND_SMS"
        tools:ignore="SmsAndCallLogPolicy" />
    <uses-permission android:name="android.permission.ANSWER_PHONE_CALLS" />

<!--    <uses-permission android:name="android.permission.MEDIA_CONTENT_CONTROL" tools:ignore="ProtectedPermissions" />-->

    <uses-permission android:name="sk.henrichg.phoneprofilesplusextender.ACCESSIBILITY_SERVICE_PERMISSION"/>
    <uses-permission android:name="sk.henrichg.pppputsettings.PPP_PUT_SETTINGS_PERMISSION"/>

    <!-- for WireGuard -->
    <uses-permission android:name="com.wireguard.android.permission.CONTROL_TUNNELS"/>

    <!-- for "Night light settings" profile parameter in "Samsung devices -->
    <uses-permission android:name="com.samsung.android.permission.SEC_EYECOMFORT_BROADCAST"/>

    <!-- for Termux application - required for SentIntent commands implemented for Tasker -->
    <uses-permission android:name="com.termux.permission.RUN_COMMAND"/>

<!--    <uses-permission android:name="com.huawei.permission.external_app_settings.USE_COMPONENT"/>-->



<!--    https://developer.android.com/guide/topics/manifest/uses-feature-element-->
<!--    <uses-feature-->
<!--        android:name="android.software.leanback"-->
<!--        android:required="false"/>-->
    <!--  Only devices with touchscreen - maybe this exclude TV-->
    <uses-feature
        android:name="android.hardware.touchscreen"
        android:required="true"
        tools:ignore="UnnecessaryRequiredFeature" />
    <uses-feature
        android:name="android.hardware.faketouch"
        android:required="true"/>

    <uses-feature
        android:name="android.hardware.telephony"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.camera"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.camera.front"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.wifi"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.bluetooth"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.location"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.location.network"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.location.gps"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.nfc"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.sensor.accelerometer"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.sensor.compass"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.sensor.proximity"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.sensor.light"
        android:required="false"/>
    <uses-feature
        android:name="android.hardware.telephony.messaging"
        android:required="false"/>

    <queries>
        <!-- ACRA fix of MailSenderConfigurationBuilder for Android 11 -->
        <intent>
            <action android:name="android.intent.action.SEND" />
            <data android:mimeType="message/rfc822" />
        </intent>
        <intent>
            <action android:name="android.intent.action.SEND_MULTIPLE" />
            <data android:mimeType="message/rfc822" />
        </intent>
        <intent>
            <action android:name="android.intent.action.SENDTO" />
            <data android:scheme="mailto" />
        </intent>

        <!-- NFC tag sensor -->
        <intent>
            <action android:name="android.nfc.action.NDEF_DISCOVERED"/>
            <data android:mimeType="application/vnd.phoneprofilesplus.events"/>
        </intent>

        <!-- PPPPutSettings -->
        <package android:name="sk.henrichg.pppputsettings" />
    </queries>

    <application
        android:name=".PPApplication"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/ppp_app_name"
        android:supportsRtl="true"
        android:resizeableActivity="true"
        android:allowBackup="false"
        android:persistent="true"
        android:requestLegacyExternalStorage="true" >

<!--        tools:replace - required for rncryptor-native-->
<!--        tools:replace="android:label,android:allowBackup"-->

        <!--        This not working currently, maybe is needed AGP 7.3.0-->
<!--        android:localeConfig="@xml/locales_config"-->
<!--        android:roundIcon="@mipmap/ic_launcher_round"-->
<!--        android:largeHeap="true"-->

        <!-- keep application persistent
        android:persistent="true"  -->

        <!-- Do not use this. this may shutdown PPP

        https://developer.android.com/guide/topics/data/autobackup#BackupSchedule
        During Auto Backup, the system shuts down the app to make sure it is no longer writing to the file system.

        android:allowBackup="true"
        android:backupAgent=".PhoneProfilesBackupAgent"
        android:fullBackupContent="@xml/phoneprofiles_backup_scheme"
        android:fullBackupOnly="true"
        -->

        <!-- support for 18.5:9 display (Samsung Galaxy S8, LG G6) -->
        <meta-data
            android:name="android.max_aspect"
            android:value="2.4"/>

        <!-- Library App Startup is not used in PPP
             https://developer.android.com/topic/libraries/app-startup -->
        <!-- https://developer.android.com/guide/background/persistent/configuration/custom-configuration -->
        <!-- Since WorkManager 2.6, App Startup is used internally within WorkManager.
             To provide a custom initializer you need to remove the androidx.startup node.
             If you don't use App Startup in your app, you can remove it completely. -->
<!--        <provider-->
<!--            android:name="androidx.startup.InitializationProvider"-->
<!--            android:authorities="${applicationId}.androidx-startup"-->
<!--            tools:node="remove">-->
<!--        </provider>-->

        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths"/>
        </provider>

        <provider
            android:name="rikka.shizuku.ShizukuProvider"
            android:authorities="${applicationId}.shizuku"
            android:multiprocess="false"
            android:enabled="true"
            android:exported="true"
            android:permission="android.permission.INTERACT_ACROSS_USERS_FULL" />

        <!--
        <provider
            android:name=".SLBackupContentProvider"
            android:authorities="${applicationId}.widgetConfigProvider"
            android:exported="true"
            tools:ignore="ExportedContentProvider" />
        -->

<!-- https://developer.android.com/about/versions/13/features/app-languages
     requires appcompat 1.6.0+ -->
<!--        <service-->
<!--            android:name="androidx.appcompat.app.AppLocalesMetadataHolderService"-->
<!--            android:enabled="false"-->
<!--            android:exported="false">-->
<!--            <meta-data-->
<!--                android:name="autoStoreLocales"-->
<!--                android:value="true" />-->
<!--        </service>-->

        <!-- !!! android:theme must be set here -->
        <!-- android:label is required, will be used for launcher icon (because of category LAUCHER)  -->
        <activity
            android:name=".ActivatorActivity"
            android:label="@string/title_activity_ppp"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.activator"
            android:launchMode="singleInstance"
            android:excludeFromRecents="true"
            android:theme="@style/ActivatorTheme_dayNight"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>

        <!-- android:theme must be used, because of flickering of withe bacground in Huawei -->
        <activity
            android:name=".EditorActivity"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.editor"
            android:theme="@style/Theme.PhoneProfilesTheme_withToolbar_dayNight"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>
<!--        android:label="@string/title_activity_editor"-->

        <activity
            android:name=".ProfilesPrefsActivity">
        </activity>
<!--    android:label="@string/title_activity_profile_preferences">-->
        <activity
            android:name=".EventsPrefsActivity">
        </activity>
<!--    android:label="@string/title_activity_event_preferences">-->
        <activity
            android:name=".PhoneProfilesPrefsActivity"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <action android:name="android.appwidget.action.APPWIDGET_CONFIGURE"/>
            </intent-filter>
        </activity>
<!--        android:label="@string/title_activity_phone_profiles_preferences"-->
        <activity
            android:name=".ShortcutCreatorActivity"
            android:excludeFromRecents="true"
            android:icon="@drawable/ic_shortcut"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.popup"
            android:launchMode="singleInstance"
            android:theme="@style/DialogTheme_dayNight"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.intent.action.CREATE_SHORTCUT"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>
<!--        android:label="@string/title_activity_shortcut_creator"-->
        <activity
            android:name=".BackgroundActivateProfileActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.shortcut"
            android:theme="@style/EmptyAppCompatActivity"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>
        <activity
            android:name=".ActionForExternalApplicationActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.externalApp"
            android:theme="@style/EmptyAppCompatActivity"
            android:exported="true"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="sk.henrichg.phoneprofilesplus.ACTION_ACTIVATE_PROFILE"/>
                <action android:name="sk.henrichg.phoneprofilesplus.ACTION_RESTART_EVENTS"/>
                <action android:name="sk.henrichg.phoneprofilesplus.ACTION_ENABLE_RUN_FOR_EVENT"/>
                <action android:name="sk.henrichg.phoneprofilesplus.ACTION_PAUSE_EVENT"/>
                <action android:name="sk.henrichg.phoneprofilesplus.ACTION_STOP_EVENT"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>
        <activity
            android:name=".RestartEventsFromGUIActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".ActivityLogActivity">
        </activity>
<!--    android:label="@string/title_activity_activity_log">-->
        <activity
            android:name=".ActivityLogHelpActivity">
        </activity>
<!--    android:label="@string/about_application_title">-->
        <activity
            android:name=".ImportantInfoActivity">
        </activity>
<!--    android:label="@string/important_info_activity_title">-->
        <activity
            android:name=".ImportantInfoActivityForceScroll">
        </activity>
<!--    android:label="@string/important_info_activity_title">-->
        <activity
            android:name=".GrantPermissionActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".LocationGeofenceEditorActivityOSM">
        </activity>
<!--    android:label="@string/location_editor_title">-->
        <activity
            android:name=".LaunchShortcutActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".AboutApplicationActivity">
        </activity>
<!--    android:label="@string/about_application_title">-->
        <activity
            android:name=".NFCTagWriteActivity"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.nfc.action.NDEF_DISCOVERED"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>
<!--        android:label="@string/nfc_tag_pref_dlg_writeTagTitle"-->
        <activity
            android:name=".NFCTagReadActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:launchMode="singleInstance"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:theme="@style/EmptyAppCompatActivity"
            android:exported="true">
<!--            <intent-filter>-->
<!--                <action android:name="android.nfc.action.TECH_DISCOVERED"/>-->
<!--            </intent-filter>-->
<!--            <intent-filter>-->
<!--                <action android:name="android.nfc.action.TAG_DISCOVERED"/>-->
<!--            </intent-filter>-->
            <intent-filter>
                <action android:name="android.nfc.action.NDEF_DISCOVERED"/>
                <data android:mimeType="application/vnd.phoneprofilesplus.events"/>
<!--                <data android:scheme="vnd.android.nfc"-->
<!--                    android:host="ext"-->
<!--                    android:pathPrefix="/sk.henrichg.phoneprofilesplus:pppNfcType"/>-->

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
            <!--<meta-data android:name="android.nfc.action.TECH_DISCOVERED"
                       android:resource="@xml/filter_nfc" />-->
        </activity>
        <activity
            android:name=".NFCTagReadForegroundActivity"
            tools:ignore="IntentFilterExportedReceiver">
<!--            <intent-filter>-->
<!--                <action android:name="android.nfc.action.TAG_DISCOVERED"/>-->
<!--            </intent-filter>-->
        </activity>
<!--        android:label="@string/nfc_tag_pref_dlg_readNfcTag_title"-->
        <activity
            android:name=".ActivatorTargetHelpsActivity"
            android:label=""
            android:excludeFromRecents="true"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyTargetHelpsActivity">
        </activity>
        <activity
            android:name=".LockDeviceActivity"
            android:excludeFromRecents="true"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.lockDevice"
            android:launchMode="singleInstance"
            android:theme="@style/LockDeviceActivity">
        </activity>
        <activity
            android:name=".ExitApplicationActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".RunApplicationEditorIntentActivity"
            android:windowSoftInputMode="stateAlwaysHidden">
        </activity>
<!--        android:label="@string/intent_editor_title"-->
        <activity
            android:name=".NotUsedMobileCellsDetectedActivity"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".CheckPPPReleasesActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".GitHubAssetsScreenshotActivity">
        </activity>
<!--    android:label="@string/github_assets_screenshot_label">-->
        <activity
            android:name=".DonationPayPalActivity"
            android:theme="@style/DialogTheme_dayNight"
            >
<!--            android:label="@string/donation_activity_title"-->
        </activity>
        <activity
            android:name=".CheckCriticalPPPReleasesDisableActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".TileChooserActivity"
            android:excludeFromRecents="true"
            android:icon="@drawable/ic_profile_default"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.popup"
            android:theme="@style/DialogTheme_dayNight"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE">
        </activity>
<!--        android:label="@string/title_activity_tile_chooser"-->
        <activity
            android:name=".TileChooserLongClickActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.shortcut"
            android:theme="@style/EmptyAppCompatActivity"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE_PREFERENCES" />
            </intent-filter>
        </activity>
        <activity
            android:name=".CheckRequiredExtenderReleasesActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
<!--        <activity-->
<!--            android:name=".AutostartPermissionActivity"-->
<!--            android:excludeFromRecents="true"-->
<!--            android:label=""-->
<!--            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"-->
<!--            android:launchMode="singleInstance"-->
<!--            android:theme="@style/EmptyAppCompatActivity">-->
<!--        </activity>-->
        <activity
            android:name=".LaunchWidgetIconConfigurationActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".LaunchWidgetOneRowConfigurationActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".LaunchWidgetListConfigurationActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".LaunchWidgetPanelConfigurationActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".LogCrashActivity"
            android:label="">
        </activity>
        <activity
            android:name=".LaunchWidgetOneRowProfileListConfigurationActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".NotificationsPreferncesActivity"
            android:exported="true"
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:theme="@style/EmptyAppCompatActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.NOTIFICATION_PREFERENCES"/>
            </intent-filter>
        </activity>
<!--        android:label="@string/notifications_preferences_notification_type"-->
        <activity
            android:name=".GenerateNotificationAfterClickActivity"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.popup"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".LaunchMobileCellsScanningActivity"
            android:exported="true"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </activity>
        <activity
            android:name=".GrantDrawOverAppsActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".GrantShizukuPermissionActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".CheckLatestPPPPSReleasesActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:launchMode="singleInstance"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>
        <activity
            android:name=".ErrorNotificationActivity"
            android:excludeFromRecents="true"
            android:label=""
            android:taskAffinity="sk.henrichg.phoneprofilesplus.empty"
            android:theme="@style/EmptyAppCompatActivity">
        </activity>

        <!-- implicit broadcast receivers, in Android O exception group -->
        <!-- https://developer.android.com/guide/components/broadcast-exceptions.html -->
        <receiver
            android:name=".BootUpReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED"/>
                <action android:name="android.intent.action.QUICKBOOT_POWERON"/>
                <action android:name="com.htc.intent.action.QUICKBOOT_POWERON"/>
            </intent-filter>
        </receiver>
        <receiver
            android:name=".LocaleChangedReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.LOCALE_CHANGED"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>
        <receiver android:name=".NextAlarmClockBroadcastReceiver"
                  android:enabled="true"
                  android:exported="true">
            <intent-filter>
                <action android:name="android.app.action.NEXT_ALARM_CLOCK_CHANGED"/>

                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
        </receiver>

        <!-- no implicit broadcast receivers -->
        <receiver
            android:name=".PackageReplacedReceiver"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MY_PACKAGE_REPLACED"/>
            </intent-filter>
        </receiver>

        <!-- widget providers -->
        <receiver
            android:name=".IconWidgetProvider"
            android:enabled="true"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/widget_label_icon">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/icon_widget_info"/>
        </receiver>
        <receiver
            android:name=".OneRowWidgetProvider"
            android:enabled="true"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/widget_label_one_row">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/one_row_widget_info"/>
        </receiver>
        <receiver
            android:name=".ProfileListWidgetProvider"
            android:enabled="true"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/widget_label_list">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/profile_list_widget_info"/>
        </receiver>
        <receiver
            android:name=".PanelWidgetProvider"
            android:enabled="true"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/widget_label_panel">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/panel_widget_info"/>
        </receiver>
        <receiver
            android:name=".OneRowProfileListWidgetProvider"
            android:enabled="true"
            android:exported="true"
            android:icon="@mipmap/ic_launcher"
            android:label="@string/widget_label_one_row_profile_list">
            <intent-filter>
                <action android:name="android.appwidget.action.APPWIDGET_UPDATE"/>
            </intent-filter>

            <meta-data
                android:name="android.appwidget.provider"
                android:resource="@xml/one_row_profile_list_widget_info"/>
        </receiver>

        <!-- main service -->
        <service
            android:name=".PhoneProfilesService"
            android:label="@string/ppp_app_name"
            android:icon="@drawable/ic_ppp_app_icon"
            android:enabled="true"
            android:stopWithTask="false"
            android:foregroundServiceType="location|connectedDevice" />

        <!-- widget services -->
        <service
            android:name=".ProfileListWidgetServiceList"
            android:permission="android.permission.BIND_REMOTEVIEWS" />
        <service
            android:name=".ProfileListWidgetServiceGrid"
            android:permission="android.permission.BIND_REMOTEVIEWS" />
        <service
            android:name=".ProfileListWidgetServiceCompactGrid"
            android:permission="android.permission.BIND_REMOTEVIEWS" />
        <service
            android:name=".PanelWidgetService"
            android:permission="android.permission.BIND_REMOTEVIEWS" />
        <service
            android:name=".PhoneProfilesDashClockExtension"
            android:enabled="true"
            android:exported="true"
            android:icon="@drawable/ic_dashclock"
            android:label="@string/ppp_app_name"
            android:permission="com.google.android.apps.dashclock.permission.READ_EXTENSION_DATA">
            <intent-filter>
                <action android:name="com.google.android.apps.dashclock.Extension"/>
            </intent-filter>
            <meta-data
                android:name="protocolVersion"
                android:value="2"/>
            <meta-data
                android:name="worldReadable"
                android:value="true"/>
            <meta-data
                android:name="description"
                android:value="@string/dashclock_extension_description"/>
        </service>

        <!-- other services -->
        <service
            android:name=".PPNotificationListenerService"
            android:enabled="true"
            android:exported="true"
            android:label="@string/ppp_app_name"
            android:permission="android.permission.BIND_NOTIFICATION_LISTENER_SERVICE">
            <intent-filter>
                <action android:name="android.service.notification.NotificationListenerService"/>
            </intent-filter>
        </service>
        <service
            android:name=".MobileCellsRegistrationService"
            android:enabled="true"
            android:stopWithTask="false" />
<!--        android:foregroundServiceType="location"/>-->

        <service
            android:name=".PPTileService1"
            android:label="@string/quick_tile_icon_label"
            android:icon="@drawable/ic_profile_default"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
            <meta-data android:name="android.service.quicksettings.ACTIVE_TILE"
                android:value="true" />
        </service>
        <service
            android:name=".PPTileService2"
            android:label="@string/quick_tile_icon_label"
            android:icon="@drawable/ic_profile_default"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
            <meta-data android:name="android.service.quicksettings.ACTIVE_TILE"
                android:value="true" />
        </service>
        <service
            android:name=".PPTileService3"
            android:label="@string/quick_tile_icon_label"
            android:icon="@drawable/ic_profile_default"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
            <meta-data android:name="android.service.quicksettings.ACTIVE_TILE"
                android:value="true" />
        </service>
        <service
            android:name=".PPTileService4"
            android:label="@string/quick_tile_icon_label"
            android:icon="@drawable/ic_profile_default"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
            <meta-data android:name="android.service.quicksettings.ACTIVE_TILE"
                android:value="true" />
        </service>
        <service
            android:name=".PPTileService5"
            android:label="@string/quick_tile_icon_label"
            android:icon="@drawable/ic_profile_default"
            android:permission="android.permission.BIND_QUICK_SETTINGS_TILE"
            tools:ignore="IntentFilterExportedReceiver">
            <intent-filter>
                <action android:name="android.service.quicksettings.action.QS_TILE" />
            </intent-filter>
            <meta-data android:name="android.service.quicksettings.ACTIVE_TILE"
                android:value="true" />
        </service>

        <service android:name="sk.henrichg.phoneprofilesplus.PPVoiceService"
            android:exported="true"
            android:permission="android.permission.BIND_VOICE_INTERACTION"
            tools:ignore="IntentFilterExportedReceiver">
            <meta-data android:name="android.voice_interaction"
                android:resource="@xml/assist_metadata"/>
            <intent-filter>
                <action android:name="android.service.voice.VoiceInteractionService"/>
            </intent-filter>
        </service>

        <service android:name="sk.henrichg.phoneprofilesplus.PPVoiceSessionService"
            android:exported="true"
            android:permission="android.permission.BIND_VOICE_INTERACTION"/>

        <!-- This service is required, when user needs to configure PPP as default assistant, for -->
        <!-- airplane mode switching without root. -->
        <!-- This service is required by Googe (e-mail from Google):
             "We recently uncovered a highly visible user-facing issue where your app (sk.henrichg.phoneprofilesplus)
             causes the Android RecognitionService to break, which is potentially affecting all of your users on
             Android 11 or earlier.
             Specifically, when a user on Android 11 or earlier sets your assistant application as the default
             assistant for the phone, it is expected to provide RecognitionService (speech to text) functionality
             to other applications on the same device as well. However, if another app requests the RecognitionService
             functionality and does not receive it from your assistant app, the requesting app will immediately crash.
             The Android RecognitionService functionality is a widely used service. To fix the issue as soon as
             possible, please review the below recommendation." -->
        <service android:name="sk.henrichg.phoneprofilesplus.PPRecognitionServiceTrampoline"
            android:label="RecognitionServiceTrampoline"
            android:exported="true"
            tools:ignore="ExportedService">
            <intent-filter>
                <action android:name="android.speech.RecognitionService" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>
        </service>
        <service android:name="sk.henrichg.phoneprofilesplus.PPCallScreeningService"
            android:permission="android.permission.BIND_SCREENING_SERVICE"
            android:exported="true">
            <intent-filter>
                <action android:name="android.telecom.CallScreeningService"/>
            </intent-filter>
        </service>

    </application>

</manifest>